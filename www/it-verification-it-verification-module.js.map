{"version":3,"sources":["./src/app/it-verification/it-verification.page.component.html","./src/app/it-verification/it-verification.page.component.scss","./node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","./src/app/it-verification/it-verification.page.component.ts","./src/app/it-verification/it-verification.module.ts","./src/app/it-verification/it-verification.routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,6bAA8X,0CAA0C,qoBAAqoB,4DAA4D,ujBAAujB,0BAA0B,sQAAsQ,wDAAwD,mEAAmE,oDAAoD,2CAA2C,0EAA0E,0fAA0f,E;;;;;;;;;;;;ACA7uF;AAAe,0FAA2B,yCAAyC,uBAAuB,oBAAoB,qBAAqB,iBAAiB,GAAG,0BAA0B,iBAAiB,GAAG,mBAAmB,+BAA+B,mBAAmB,GAAG,6CAA6C,myBAAmyB,E;;;;;;;;;;;;ACA7mC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyH;AAC/B;AAC3C;;AAEP;AACE;AACD;;AAEzC,8DAA8D;AAC9D,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kGAAkG,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,IAAI,iCAAiC,EAAE,+FAA+F,CAAC,2DAAoB,MAAM,wBAAwB,gBAAgB,2DAAoB,IAAI,qCAAqC,EAAE;AAC9b,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,CAAC;AACD,sDAAsD;AACtD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,yDAAkB;AACnD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E,iBAAiB,0DAAmB,EAAE,2CAA2C;AACjF,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,kDAAI;AAClB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wDAAS,GAAG;AACvC,2BAA2B,4BAA4B;AACvD,oEAAoE,0DAAW;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,+DAA+D,kBAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG,GAAG,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+DAA+D,kBAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,YAAY;AAC/I,2BAA2B,+DAAwB,EAAE,oEAAoE,mBAAmB,YAAY,iCAAiC,igBAAigB;AAC1rB,QAAQ,wDAAiB;AACzB,KAAK;AACL,QAAQ,wDAAiB;AACzB,KAAK,EAAE,2BAA2B,SAAS,oDAAW,EAAE,uDAAc,EAAE,uD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","file":"it-verification-it-verification-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <!-- <ion-toolbar> -->\\r\\n  <div\\r\\n    class=\\\"osahan-header-nav shadow-sm p-3 d-flex align-items-center bg-purple\\\"\\r\\n  >\\r\\n    <h5 class=\\\"font-weight-normal mb-0 text-white\\\">\\r\\n      <a class=\\\"text-purple\\\" routerLink=\\\"/get-started\\\"\\r\\n        ><fa-icon icon=\\\"arrow-left\\\" class=\\\"icofont-rounded-left\\\"></fa-icon\\r\\n      ></a>\\r\\n      <ion-title>{{ \\\"APP.VERIFICATION.TITLE\\\" | translate }}</ion-title>\\r\\n    </h5>\\r\\n  </div>\\r\\n  <!-- </ion-toolbar> -->\\r\\n</ion-header>\\r\\n\\r\\n<ion-content id=\\\"content\\\" fullscreen>\\r\\n  <!-- <cdk-virtual-scroll-viewport\\r\\n    class=\\\"scroll-viewport\\\"\\r\\n    #scroll\\r\\n    itemSize=\\\"80\\\"\\r\\n    minBufferPx=\\\"900\\\"\\r\\n    maxBufferPx=\\\"1350\\\"\\r\\n  > -->\\r\\n  <div\\r\\n    class=\\\"\\r\\n      osahan-index\\r\\n      bg-c\\r\\n      align-items-center\\r\\n      justify-content-center\\r\\n      vh-100\\r\\n      index-page\\r\\n    \\\"\\r\\n  >\\r\\n    <div class=\\\"osahan-form px-3 py-5 text-center mb-5\\\">\\r\\n      <div class=\\\"row my-3 px-3 pb-2\\\">\\r\\n        <p class=\\\"a-o-i text-muted\\\">\\r\\n          {{ \\\"APP.VERIFICATION.ENTER_VERIFICATION_CODE\\\" | translate }}\\r\\n        </p>\\r\\n        <div class=\\\"col px-1\\\">\\r\\n          <ng-otp-input\\r\\n            #ngOtpInput\\r\\n            (onInputChange)=\\\"onOtpChange($event)\\\"\\r\\n            *ngIf=\\\"showOtpComponent\\\"\\r\\n            [config]=\\\"config\\\"\\r\\n            class=\\\"\\r\\n              form-control\\r\\n              otp\\r\\n              text-purple\\r\\n              form-control-lg\\r\\n              text-center\\r\\n              pb-0\\r\\n              px-0\\r\\n            \\\"\\r\\n          ></ng-otp-input>\\r\\n        </div>\\r\\n        <p class=\\\"a-o-i text-muted p-2 mt-2\\\">{{ OTPmessage | translate }}</p>\\r\\n      </div>\\r\\n      <button\\r\\n        type=\\\"submit\\\"\\r\\n        name=\\\"submit_button\\\"\\r\\n        class=\\\"btn btn-purple btn-block osahanbus-btn mb-4\\\"\\r\\n        [disabled]=\\\"!otpVerified\\\"\\r\\n        (click)=\\\"verifyOtp()\\\"\\r\\n      >\\r\\n        {{ \\\"APP.VERIFICATION.BUTTON.VERIFICATION\\\" | translate }}\\r\\n      </button>\\r\\n      <p class=\\\"text-muted\\\">\\r\\n        {{ \\\"APP.VERIFICATION.TEXT\\\" | translate\\r\\n        }}<a href=\\\"#\\\" class=\\\"ml-2 text-orange\\\">{{\\r\\n          \\\"APP.VERIFICATION.BUTTON.RESEND\\\" | translate\\r\\n        }}</a>\\r\\n      </p>\\r\\n      <div class=\\\"d-flex justify-content-center pt-3 m-5\\\" *ngIf=\\\"errorOtpMsg\\\">\\r\\n        <span class=\\\"text-danger\\\">OOPs! Please enter valid OTP.</span>\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"d-flex justify-content-center pt-3 m-5\\\"\\r\\n        *ngIf=\\\"otpNotVerified\\\"\\r\\n      >\\r\\n        <span class=\\\"text-danger\\\"\\r\\n          >Sorry! Entered OTP is not correct. Please try again</span\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \"/* Verification */\\n.opt {\\n  border: 1px solid #dc3545 !important;\\n  border-radius: 6px;\\n  font-size: 46px;\\n  font-weight: 700;\\n  padding: 0px;\\n}\\n#verificationModal img {\\n  height: 80px;\\n}\\nh1.success-icon {\\n  font-size: 80px !important;\\n  color: #5bc550;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGl0LXZlcmlmaWNhdGlvbi5wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFBO0FBQ0E7RUFDRSxvQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtBQUNGO0FBQ0E7RUFDRSxZQUFBO0FBRUY7QUFBQTtFQUNFLDBCQUFBO0VBQ0EsY0FBQTtBQUdGIiwiZmlsZSI6Iml0LXZlcmlmaWNhdGlvbi5wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogVmVyaWZpY2F0aW9uICovXHJcbi5vcHQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkYzM1NDUgIWltcG9ydGFudDtcclxuICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgZm9udC1zaXplOiA0NnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgcGFkZGluZzogMHB4O1xyXG59XHJcbiN2ZXJpZmljYXRpb25Nb2RhbCBpbWcge1xyXG4gIGhlaWdodDogODBweDtcclxufVxyXG5oMS5zdWNjZXNzLWljb24ge1xyXG4gIGZvbnQtc2l6ZTogODBweCAhaW1wb3J0YW50O1xyXG4gIGNvbG9yOiAjNWJjNTUwO1xyXG59XHJcbiJdfQ== */\";","import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\nclass Config {\r\n}\n\nclass NgOtpInputComponent {\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.otpForm.valueChanges.subscribe((v) => {\r\n            this.keysPipe.transform(this.otpForm.controls).forEach((k) => {\r\n                var val = this.otpForm.controls[k].value;\r\n                if (val && val.length > 1) {\r\n                    if (val.length >= this.config.length) {\r\n                        this.setValue(val);\r\n                    }\r\n                    else {\r\n                        this.rebuildValue();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        this.inputType = this.getInputType();\r\n    }\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (evt) => this.handlePaste(evt));\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    ifKeyCode(event, targetCode) {\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    onKeyDown($event) {\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    onKeyUp($event, inputIdx) {\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout(() => {\r\n                ele.setSelectionRange(0, 1);\r\n            }, 0);\r\n        }\r\n    }\r\n    ifValidEntry(event) {\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    focusTo(eleId) {\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        });\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    rebuildValue() {\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                let ctrlVal = this.otpForm.controls[k].value;\r\n                let isLengthExceed = ctrlVal.length > 1;\r\n                let isCaseTransformEnabled = !this.config.allowNumbersOnly && this.config.letterCase && (this.config.letterCase.toLocaleLowerCase() == 'upper' || this.config.letterCase.toLocaleLowerCase() == 'lower');\r\n                ctrlVal = ctrlVal[0];\r\n                let transformedVal = isCaseTransformEnabled ? this.config.letterCase.toLocaleLowerCase() == 'upper' ? ctrlVal.toUpperCase() : ctrlVal.toLowerCase() : ctrlVal;\r\n                if (isCaseTransformEnabled && transformedVal == ctrlVal) {\r\n                    isCaseTransformEnabled = false;\r\n                }\r\n                else {\r\n                    ctrlVal = transformedVal;\r\n                }\r\n                val += ctrlVal;\r\n                if (isLengthExceed || isCaseTransformEnabled) {\r\n                    this.otpForm.controls[k].setValue(ctrlVal);\r\n                }\r\n            }\r\n        });\r\n        this.onInputChange.emit(val);\r\n    }\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"autocomplete\", \"one-time-code\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"autocomplete\", \"one-time-code\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width: 767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/**\r\n * @type {function(): !Array<(null|{\r\n *   type: ?,\r\n *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),\r\n * })>}\r\n * @nocollapse\r\n */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\n/** @type {!Object<string, !Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" \\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"one-time-code\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width: 767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input{width:30px;font-size:18px;height:30px}}\\n\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\n\nclass NumberOnlyDirective {\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/**\r\n * @type {function(): !Array<(null|{\r\n *   type: ?,\r\n *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),\r\n * })>}\r\n * @nocollapse\r\n */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\n/** @type {!Object<string, !Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\n\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵfac = function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); };\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of ng-otp-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgOtpInputComponent, NgOtpInputModule, KeysPipe as ɵa, NumberOnlyDirective as ɵb };\n\n//# sourceMappingURL=ng-otp-input.js.map","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Config } from '../models/otp.config';\r\nimport { AppService } from '../services/app.servcie';\r\nimport { AuthtenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-verification',\r\n  templateUrl: './it-verification.page.component.html',\r\n  styleUrls: ['./it-verification.page.component.scss'],\r\n})\r\nexport class VerificationPageComponent implements OnInit {\r\n  userData;\r\n\r\n  OTP: string = '';\r\n  showOTPInput: boolean = false;\r\n  OTPmessage: string = 'APP.VERIFICATION.OTP_MESSAGE';\r\n\r\n  otp: string;\r\n  showOtpComponent = true;\r\n  otpVerified = false;\r\n  errorOtpMsg = false;\r\n  otpNotVerified = false;\r\n  authfbObserver;\r\n\r\n  @ViewChild('ngOtpInput', { static: false }) ngOtpInput: any;\r\n  config: Config = {\r\n    allowNumbersOnly: false,\r\n    length: 6,\r\n    isPasswordInput: false,\r\n    disableAutoFocus: false,\r\n    placeholder: '',\r\n    inputStyles: {\r\n      width: '50px',\r\n      height: '50px',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authtenticationService: AuthtenticationService,\r\n    private toastController: ToastController,\r\n    private appService: AppService,\r\n    public fbauth: AngularFireAuth,\r\n    private fbstore: AngularFirestore\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authfbObserver = this.fbauth.authState.subscribe((user) => {\r\n      if (user) {\r\n        this.otpSentToast();\r\n      }\r\n    });\r\n    this.otpSentToast();\r\n  }\r\n\r\n  async otpSentToast() {\r\n    const toast = await this.toastController.create({\r\n      message: 'OTP Sent.',\r\n      duration: 2000,\r\n      position: 'bottom',\r\n      animated: true,\r\n      color: 'tertiary',\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async otpVerifiedToast() {\r\n    const toast = await this.toastController.create({\r\n      message: 'OTP Verified.',\r\n      duration: 2000,\r\n      position: 'bottom',\r\n      animated: true,\r\n      color: 'Success',\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  OtpVerification(res) {\r\n    this.otpVerified = true;\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.authtenticationService\r\n        .enterVerificationCode(res)\r\n        .then(async (userData) => {\r\n          console.log(userData);\r\n          const user = userData;\r\n          this.appService.otpVerifiedToast();\r\n          resolve(user);\r\n          this.fbstore\r\n            .collection('companys')\r\n            .snapshotChanges()\r\n            .subscribe((data) => {\r\n              const filteredUser = data.filter(\r\n                (result) =>\r\n                  result.payload.doc.data()['mobileNumber'] === user.phoneNumber\r\n              );\r\n              console.log(filteredUser[0].payload.doc.data());\r\n              if (\r\n                filteredUser[0].payload.doc.data()['paymentStatus'] === 'Paid'\r\n              ) {\r\n                console.log('user did pay');\r\n                this.router.navigate(['/select-vehicle']);\r\n              } else {\r\n                console.log('user did not pay');\r\n                this.router.navigate(['/payment']);\r\n              }\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          this.errorOtpMsg = false;\r\n          this.otpNotVerified = true;\r\n          reject(error.message);\r\n        });\r\n    });\r\n  }\r\n\r\n  onOtpChange(otp) {\r\n    this.otp = otp;\r\n    if (this.otp.length === 6) {\r\n      this.errorOtpMsg = false;\r\n      this.otpVerified = true;\r\n    }\r\n  }\r\n\r\n  setVal(val) {\r\n    this.ngOtpInput.setValue(val);\r\n  }\r\n\r\n  toggleDisable() {\r\n    if (this.ngOtpInput.otpForm) {\r\n      if (this.ngOtpInput.otpForm.disabled) {\r\n        this.ngOtpInput.otpForm.enable();\r\n      } else {\r\n        this.ngOtpInput.otpForm.disable();\r\n      }\r\n    }\r\n  }\r\n\r\n  onConfigChange() {\r\n    this.showOtpComponent = false;\r\n    this.otp = null;\r\n    setTimeout(() => {\r\n      this.showOtpComponent = true;\r\n    }, 0);\r\n  }\r\n\r\n  verifyOtp() {\r\n    if (this.otp.length === 6) {\r\n      const otpNumber = this.otp.toString();\r\n      this.OtpVerification(otpNumber);\r\n    } else {\r\n      this.otpNotVerified = false;\r\n      this.errorOtpMsg = true;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { VerificationPageComponent } from './it-verification.page.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { VerificationPageRoutingModule } from './it-verification.routing.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgOtpInputModule } from 'ng-otp-input';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: VerificationPageComponent,\r\n  },\r\n];\r\n/**\r\n * MODULES\r\n */\r\nconst MODULES = [\r\n  CommonModule,\r\n  FormsModule,\r\n  IonicModule,\r\n  RouterModule.forChild(routes),\r\n  FontAwesomeModule,\r\n  TranslateModule,\r\n  NgOtpInputModule,\r\n  VerificationPageRoutingModule, // VerificationPageRoutingModule\r\n];\r\n\r\n/**\r\n * COMPONENTS\r\n */\r\nconst COMPONENTS = [\r\n  VerificationPageComponent, // VerificationPageComponent\r\n];\r\n\r\n/**\r\n * PROVIDERS\r\n */\r\nconst PROVIDERS = [];\r\n\r\n/**\r\n * Ng module\r\n */\r\n@NgModule({\r\n  imports: MODULES,\r\n  exports: COMPONENTS,\r\n  declarations: COMPONENTS,\r\n  providers: PROVIDERS,\r\n})\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    FontAwesomeModule,\r\n  ],\r\n  declarations: [VerificationPageComponent],\r\n})\r\nexport class VerificationPageModule {}\r\n","/***********************************\r\n * Copyright Fedex 1995 - 2021\r\n ***********************************/\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { VerificationPageComponent } from \"./it-verification.page.component\";\r\n/**\r\n * Routes\r\n */\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\", // path\r\n    component: VerificationPageComponent, // component\r\n  },\r\n];\r\n\r\n/**\r\n * Ng module\r\n */\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)], // imports\r\n  exports: [RouterModule], // exports\r\n})\r\n\r\n/**\r\n * VerificationPageRoutingModule\r\n */\r\nexport class VerificationPageRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}